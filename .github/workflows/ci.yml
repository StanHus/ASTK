name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ".[dev]"

      - name: Run tests with coverage
        run: |
          pytest --cov=astk tests/ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml

      - name: Type check with mypy
        run: |
          mypy --strict astk/

      - name: Lint with ruff
        run: |
          pip install ruff
          ruff check astk/ tests/
          ruff format --check astk/ tests/

  benchmark:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    services:
      otel-collector:
        image: otel/opentelemetry-collector:0.96.0
        ports:
          - 4317:4317
        volumes:
          - ./otel-collector-config.yaml:/etc/otel-collector/config.yaml

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ".[dev]"

      - name: Run benchmarks
        run: |
          # Create sample agent for testing
          echo 'def main(): return "Hello from test agent"' > test_agent.py

          # Run benchmarks
          python scripts/run_benchmarks.py \
            --agent-entrypoint test_agent.py \
            --otlp-endpoint localhost:4317

      - name: Upload benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: benchmark_results/

      - name: Check benchmark thresholds
        run: |
          # Install dependencies for threshold checker
          pip install pyyaml click

          # Find latest results file
          latest_results=$(ls -t benchmark_results/benchmark_results_*.json | head -n1)

          # Run threshold checks
          python scripts/check_thresholds.py \
            --results-file "$latest_results" \
            --thresholds-file config/benchmark_thresholds.yaml \
            --fail-on-warning

          # Archive thresholds config for reference
          cp config/benchmark_thresholds.yaml benchmark_results/
